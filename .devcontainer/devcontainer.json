{
  "name": "Agentic RedTeam Radar Development",
  "dockerComposeFile": "../docker-compose.yml",
  "service": "radar-dev",
  "workspaceFolder": "/app",
  
  // Features to install
  "features": {
    "ghcr.io/devcontainers/features/git:1": {},
    "ghcr.io/devcontainers/features/github-cli:1": {},
    "ghcr.io/devcontainers/features/docker-in-docker:1": {}
  },
  
  // Configure tool-specific properties
  "customizations": {
    "vscode": {
      "extensions": [
        "ms-python.python",
        "ms-python.black-formatter",
        "ms-python.isort",
        "ms-python.flake8",
        "ms-python.mypy-type-checker",
        "ms-vscode.test-adapter-converter",
        "ms-vscode.extension-test-runner",
        "tamasfe.even-better-toml",
        "redhat.vscode-yaml",
        "ms-azuretools.vscode-docker",
        "GitHub.copilot",
        "GitHub.copilot-chat",
        "ms-vscode.vscode-json",
        "DavidAnson.vscode-markdownlint",
        "streetsidesoftware.code-spell-checker",
        "ms-vscode.makefile-tools"
      ],
      "settings": {
        "python.defaultInterpreterPath": "/usr/local/bin/python",
        "python.linting.enabled": true,
        "python.linting.pylintEnabled": false,
        "python.linting.flake8Enabled": true,
        "python.linting.mypyEnabled": true,
        "python.formatting.provider": "black",
        "python.sortImports.args": ["--profile", "black"],
        "python.terminal.activateEnvironment": false,
        "python.testing.pytestEnabled": true,
        "python.testing.unittestEnabled": false,
        "python.testing.pytestArgs": ["tests"],
        "files.associations": {
          "*.yml": "yaml",
          "*.yaml": "yaml"
        },
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
          "source.organizeImports": true
        },
        "files.exclude": {
          "**/__pycache__": true,
          "**/*.pyc": true,
          ".pytest_cache": true,
          ".coverage": true,
          "htmlcov": true,
          ".tox": true,
          "dist": true,
          "*.egg-info": true
        }
      }
    }
  },
  
  // Use 'forwardPorts' to make a list of ports inside the container available locally
  "forwardPorts": [8001, 5678, 6379, 5432, 9090, 3000],
  
  // Configure port attributes
  "portsAttributes": {
    "8001": {
      "label": "Radar API",
      "onAutoForward": "notify"
    },
    "5678": {
      "label": "Python Debugger",
      "onAutoForward": "ignore"
    },
    "6379": {
      "label": "Redis",
      "onAutoForward": "ignore"
    },
    "5432": {
      "label": "PostgreSQL",
      "onAutoForward": "ignore"
    },
    "9090": {
      "label": "Prometheus",
      "onAutoForward": "ignore"
    },
    "3000": {
      "label": "Grafana",
      "onAutoForward": "ignore"
    }
  },
  
  // Use 'postCreateCommand' to run commands after the container is created
  "postCreateCommand": [
    "sh", "-c", 
    "pip install -e .[dev] && pre-commit install && echo 'Development environment ready!'"
  ],
  
  // Use 'postStartCommand' to run commands after the container starts
  "postStartCommand": "echo 'Container started. Ready for development!'",
  
  // Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root
  "remoteUser": "radar",
  
  // Set environment variables
  "containerEnv": {
    "RADAR_LOG_LEVEL": "DEBUG",
    "RADAR_TEST_MODE": "true",
    "PYTHONPATH": "/app/src"
  },
  
  // Mount the parent directory to access docker-compose.yml
  "mounts": [
    "source=${localWorkspaceFolder},target=/app,type=bind,consistency=cached"
  ]
}