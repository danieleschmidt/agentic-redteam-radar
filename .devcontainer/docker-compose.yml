version: '3.8'

services:
  app:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile
      args:
        VARIANT: "3.10"
    volumes:
      - ..:/workspace:cached
      - vscode-extensions:/home/vscode/.vscode-server/extensions
      - vscode-extensions-insiders:/home/vscode/.vscode-server-insiders/extensions
    
    # Use init to properly handle signals
    init: true
    
    # Keep container running
    command: sleep infinity
    
    # Network configuration
    networks:
      - radar-network
    
    # Environment variables
    environment:
      - PYTHONPATH=/workspace/src
      - DEVELOPMENT=true
      - LOG_LEVEL=DEBUG
    
    # Dependencies
    depends_on:
      - postgres
      - redis

  # PostgreSQL for testing database interactions
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    environment:
      POSTGRES_USER: radar
      POSTGRES_PASSWORD: development
      POSTGRES_DB: radar_test
    networks:
      - radar-network
    ports:
      - "5432:5432"

  # Redis for caching and session storage
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis-data:/data
    networks:
      - radar-network
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes

  # MinIO for S3-compatible object storage testing
  minio:
    image: minio/minio:latest
    restart: unless-stopped
    volumes:
      - minio-data:/data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    networks:
      - radar-network
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"

  # Prometheus for metrics collection (development)
  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    networks:
      - radar-network
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'

  # Grafana for metrics visualization
  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana-dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana-datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: false
    networks:
      - radar-network
    ports:
      - "3000:3000"

volumes:
  vscode-extensions:
  vscode-extensions-insiders:
  postgres-data:
  redis-data:
  minio-data:
  prometheus-data:
  grafana-data:

networks:
  radar-network:
    driver: bridge