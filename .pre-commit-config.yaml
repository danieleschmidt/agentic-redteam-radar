# Advanced Pre-commit Configuration for Agentic RedTeam Radar
# Enhanced with performance linting, security scanning, and advanced code quality checks

repos:
  # Enhanced pre-commit hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
        args: ['--unsafe']
      - id: check-toml
      - id: check-json
      - id: check-merge-conflict
      - id: check-added-large-files
        args: ['--maxkb=500']
      - id: debug-statements
      - id: check-docstring-first
      - id: check-case-conflict
      - id: detect-private-key
      - id: mixed-line-ending
      - id: requirements-txt-fixer

  # Code formatting
  - repo: https://github.com/psf/black
    rev: 23.9.1
    hooks:
      - id: black
        language_version: python3.10
        args: [--line-length=88, --target-version=py310]

  # Import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: ["--profile", "black", "--filter-files"]

  # Enhanced linting with performance checks
  - repo: https://github.com/pycqa/flake8
    rev: 6.1.0
    hooks:
      - id: flake8
        additional_dependencies:
          - flake8-docstrings
          - flake8-bugbear
          - flake8-comprehensions
          - flake8-pytest-style
          - flake8-simplify
          - flake8-bandit
          - flake8-performance
          - flake8-cognitive-complexity
        args: ['--max-line-length=88', '--extend-ignore=E203,W503', '--max-complexity=10']

  # Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.5.1
    hooks:
      - id: mypy
        additional_dependencies: [types-all]
        args: [--strict, --ignore-missing-imports]

  # Security scanning - enhanced
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: ['-c', 'pyproject.toml', '-r', 'src/']
        additional_dependencies: ['bandit[toml]']

  # Dependency security scanning
  - repo: https://github.com/pypa/pip-audit
    rev: v2.6.1
    hooks:
      - id: pip-audit
        args: ['--requirement', 'requirements.txt', '--format=json', '--output=pip-audit-report.json']

  # Advanced security - secrets detection
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: ^(pip-audit-report\.json|.*\.lock)$

  # Code complexity analysis
  - repo: https://github.com/xenon-analyzer/xenon
    rev: v0.9.0
    hooks:
      - id: xenon
        args: [--max-average=A, --max-modules=B, --max-absolute=B]

  # Documentation linting
  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        args: [--convention=google, --add-ignore=D100,D104]

  # YAML validation
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.32.0
    hooks:
      - id: yamllint
        args: [-c=.yamllint.yml]

  # Advanced Python analysis (selective)
  - repo: local
    hooks:
      - id: performance-audit
        name: performance-audit
        entry: python -m scripts.performance_audit
        language: python
        files: \.py$
        additional_dependencies: [memory-profiler, py-spy]

  # Jupyter notebook support
  - repo: https://github.com/nbQA-dev/nbQA
    rev: 1.7.0
    hooks:
      - id: nbqa-black
        files: \.ipynb$
      - id: nbqa-isort
        files: \.ipynb$

# Configuration for CI environments
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks
  autofix_prs: true
  autoupdate_schedule: weekly
  skip: [xenon, performance-audit]  # Skip heavy checks in CI