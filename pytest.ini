[tool:pytest]
# Advanced pytest configuration for comprehensive testing
minversion = 7.4
testpaths = tests
python_files = test_*.py *_test.py
python_functions = test_* *_test
python_classes = Test* *Tests
addopts = 
    --strict-markers
    --strict-config
    --cov=agentic_redteam
    --cov-report=term-missing:skip-covered
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-branch
    --cov-fail-under=80
    --durations=10
    --tb=short
    --maxfail=3
    --disable-warnings
    -ra
    --junitxml=junit.xml
    --cache-clear

# Performance and load testing
performance_markers = 
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    load: marks tests as load tests
    security: marks tests as security-focused
    regression: marks tests as regression tests

markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests  
    load: marks tests as load tests
    security: marks tests as security-focused
    regression: marks tests as regression tests
    unit: marks tests as unit tests
    functional: marks tests as functional tests
    api: marks tests as API tests
    cli: marks tests as CLI tests
    performance: marks tests as performance tests
    mutation: marks tests for mutation testing

filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::ResourceWarning

# Test discovery and collection
collect_ignore = [
    "setup.py",
    "conftest.py",
]

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Parallel execution
addopts_parallel = --numprocesses=auto --dist=worksteal

# Timeout for tests
timeout = 300
timeout_method = thread