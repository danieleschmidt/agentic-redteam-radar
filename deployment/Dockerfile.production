# Multi-stage build for production deployment
FROM python:3.11-slim as builder

# Install system dependencies for building
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/*

# Set up Python environment
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV PIP_NO_CACHE_DIR=1
ENV PIP_DISABLE_PIP_VERSION_CHECK=1

WORKDIR /build

# Copy requirements and install Python dependencies
COPY pyproject.toml README.md ./
COPY src/ ./src/

# Install the application
RUN pip install --no-deps . && \
    pip install uvicorn gunicorn redis psycopg2-binary

# Production stage
FROM python:3.11-slim as production

# Create non-root user
RUN groupadd --gid 1001 radar && \
    useradd --uid 1001 --gid 1001 --create-home --shell /bin/bash radar

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    curl \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Copy Python packages from builder
COPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# Set up application directory
WORKDIR /app

# Copy application files
COPY --chown=radar:radar src/ ./src/
COPY --chown=radar:radar deployment/api/ ./api/
COPY --chown=radar:radar deployment/scripts/ ./scripts/

# Create necessary directories
RUN mkdir -p /app/reports /app/logs /app/cache && \
    chown -R radar:radar /app

# Copy entrypoint script
COPY --chown=radar:radar deployment/scripts/entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

# Switch to non-root user
USER radar

# Set environment variables
ENV PYTHONPATH=/app/src
ENV RADAR_ENV=production

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Expose port
EXPOSE 8000

# Start the application
ENTRYPOINT ["/entrypoint.sh"]
CMD ["gunicorn", "--bind", "0.0.0.0:8000", "--workers", "4", "--worker-class", "uvicorn.workers.UvicornWorker", "--access-logfile", "-", "--error-logfile", "-", "api.main:app"]